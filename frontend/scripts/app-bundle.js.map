{"version":3,"sources":["app.js","environment.js","main.js","repositoryapp.js","repositorymain.js","staffapp.js","staffmain.js","components/ariaapi.js","components/csrfheaderinterceptor.js","components/datasettable.js","components/fileeditor.js","components/htable.js","components/importaria.js","components/messages.js","components/nmrapi.js","components/projectapi.js","components/projecttable.js","components/projecttableselect.js","components/searchbydate.js","components/userinfo.js","components/webdavfilepanel.js","pickerclient/pickerclient.js","resources/icopy.js","resources/index.js","resources/iupload.js","scientist/createdataset.js","scientist/dashboard.js","scientist/dashboarddetail.js","scientist/repositorytovf.js","staff/dataupload.js","staff/repositorystaff.js"],"names":["App","configureRouter","config","router","title","login","debug","testing","configure","Promise","warnings","wForgottenReturn","aurelia","use","standardConfiguration","feature","start","then","setRoot","Repositoryapp","map","route","name","moduleId","nav","Staffapp","Ariaapi","httpclient","rejectErrorResponses","withDefaults","credentials","headers","proposallisturl","proposalurl","accesstokenserviceurl","attached","console","log","created","getProposallist","fetch","response","json","proposallist","data","catch","error","getProposal","proposal","getAriaLink","getAccessToken","code","state","inject","Csrfheaderinterceptor","TOKEN_HEADER","latestCsrfToken","has","get","request","indexOf","method","add","Datasettable","pa","ea","alldatasets","subscribe","filterSelectedDataset","msg","datasetid","filterProjectDatasets","getDatasets","selectedDatasetId","getSelectedDataset","selectDataset","dataset","selectedDataset","publish","deselectProject","filterProjectDatasets2","id","mydataset","filter","i","length","selectedProjectId","projectId","datasets","getSelectedProject","CodeMirror","Fileeditor","nmrapi","client","selectFile","file","isimage","filename","showtable","codemirror","fromTextArea","cmTextarea","lineNumbers","mode","lineWrapping","refresh","ht2","Handsontable","filetable","rowHeaders","colHeaders","autoWrapRow","stretchH","autoResizeColumn","that","imageurl","webdavurl","endsWith","response2","clone","blob","bindata","convert","data2","text","setValue","alert","table","window","setTimeout","render","htable","ht","idtable","Importaria","ariaapi","ariaurl","showspinner","linkdata","url","Webdavresource","Editfile","Uploaddir","Selectedproject","project","Preselectedproject","projectid","Selecteddataset","Preselecteddataset","Preselecteddatasets","Nmrapi","handsontable","arrayBuffer","fileReader","FileReader","addEventListener","uint8Array","Uint8Array","result","indexbindata","uint82","raw","Float32Array","buffer","ri","push","updateSettings","readAsArrayBuffer","ProjectApi","apiurl","location","pathname","projecturl","dataurl","userinfourl","usersurl","projects","withBaseUrl","getProjects","resolve","setSelectedProject","setSelectedDataset","submitDataset","body","getUsers","getUserInfo","Projecttable","selectedProject","filterSelectedProposal","selectProject","Projecttableselect","Searchbydate","Userinfo","projectapi","showuserinfo","userinfo","Webdavfilepanel","setwebdav","webdavpath","dirs","DOMParser","parseFromString","str","files","filesDOM","getElementsByTagName","fileitem","getFirstElementByTagName","filedate","filesize","filetype","item","replace","date","nicedate","formatdate","Date","isdir","size","nicesize","type","unshift","tag","elements","textContent","newdir","pop","diff","sec","Math","floor","min","d","getDate","getMonth","getFullYear","getHours","getMinutes","component","slice","join","Pickerclient","href","href2","vfurl","th2","receiveMessage","e","filepicker","detached","removeEventListener","openfilewindow","popup","open","opendirwindow","Icopy","port","hrefid","value","protocol","hostname","copyclipboard","inputElement","select","document","execCommand","globalResources","Iupload","uploadhref","event","hreffull","dettached","openwindow","uploadtovf","Createdataset","datasetname","datasetinfo","datasetsummary","datasetprojectid","submitted","submit","info","summary","submitteditem","generate","random","getParams","query","test","split","reduce","params","param","key","decodeURIComponent","Dashboard","importingaria","importariastatus","importariaerror","search","substring","accessToken","error_description","Dashboarddetail","activate","routeConfig","navigationInstruction","filterProject","filterDataset","showProposals","showDatasets","filterMyDataset","deselectProposal","deselectDataset","dataseturl","deleteDataset","splice","Repositorytovf","filestoupload","uploadfiles","uploaddir","selectingfiles","setuploaddir","copyinprogress","selectedUploadDir","selectitem","submitfiles","unsubmitfiles","deleteitem","indexremoved","selectItemToUpload","removeItemToUpload","dropped","dataTransfer","stopPropagation","preventDefault","dragged","appendFiles","target","appendDir","submitUpload","copy","Dataupload","Repositorystaff","visitors","selectinguser","selectedvisitor","selectvisitor","visitor","deselectvisitor"],"mappings":"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","file":"app-bundle.js","sourcesContent":["export class App {\n\n  configureRouter(config, router) {\n    config.title = 'West-Life Repository Router';\n  }\n\n  login() {\n    //window.location=\"login.html?next\"+window.location.pathname;\n  }\n\n}\n","export default {\n  debug: true,\n  testing: true\n};\n","//Configure Bluebird Promises not to throw warnings about aurelia empty promises\nPromise.config({\n  warnings: {\n    wForgottenReturn: false\n  }\n});\n\nexport function configure(aurelia) {\n  aurelia.use\n    .standardConfiguration()\n    .feature('resources');\n  aurelia.start().then(() => aurelia.setRoot());\n\n  }\n","export class Repositoryapp {\n\n  configureRouter(config, router) {\n    config.title = 'West-Life Repository Router';\n\n    config.map([\n      {route: ['', 'dashboard'], name: 'dashboard', moduleId: 'scientist/dashboard', nav: true, title: 'Visitor Dashboard'},\n      {route: 'dashboard/project/:projectid/', name: 'projectdetail', moduleId: 'scientist/dashboarddetail'},\n      {route: 'dashboard/dataset/:datasetid/', name: 'datasetdetail', moduleId: 'scientist/dashboarddetail'},\n      {route: 'createdataset', name: 'createdataset', moduleId: 'scientist/createdataset', nav: true, title: 'Create Empty Dataset'},\n      {route: 'repositorytovf', name: 'repositorytovf', moduleId: 'scientist/repositorytovf', nav: true, title: 'Upload to Virtual Folder'}\n    ]);\n    this.router = router;\n  }\n\n  login() {\n    //window.location=\"login.html?next\"+window.location.pathname;\n  }\n\n}\n","//Configure Bluebird Promises not to throw warnings about aurelia empty promises\nPromise.config({\n  warnings: {\n    wForgottenReturn: false\n  }\n});\n\nexport function configure(aurelia) {\n  aurelia.use\n    .standardConfiguration()\n    .feature('resources');\n  aurelia.start().then(() => aurelia.setRoot('repositoryapp'));\n}\n","export class Staffapp {\n\n  configureRouter(config, router) {\n    config.title = 'West-Life Repository Router';\n    config.map([\n      {route: ['', 'dashboard'], name: 'dashboard', moduleId: 'staff/repositorystaff', nav: true, title: 'Visitor Experiment Dashboard'},\n      {route: 'dataupload', name: 'dataupload', moduleId: 'staff/dataupload', nav: true, title: 'Visitor Dataset Upload'}\n    ]);\n    this.router = router;\n\n  }\n\n}\n","export function configure(aurelia) {\n  aurelia.use\n    .standardConfiguration()\n    .feature('resources');\n  aurelia.start().then(() => aurelia.setRoot('staffapp'));\n}\n","import {HttpClient} from 'aurelia-fetch-client';\n\n\n/* Provides methods to return promise of data from REST Project api*/\nexport class Ariaapi {\n  static inject = [HttpClient];\n\n  constructor(httpclient) {\n    this.httpclient=httpclient;\n    this.httpclient.configure(config => {\n      config\n        .rejectErrorResponses()\n        .withDefaults({\n          credentials: 'same-origin',\n          headers: {\n            'Accept': 'application/json',\n            'X-Requested-With': 'Fetch'\n          }\n        })\n    });\n    //needs SSO credentials\n    this.proposallisturl = \"https://www.structuralbiology.eu/ws/oauth/proposallist\";\n    this.proposalurl = \"https://www.structuralbiology.eu/ws/oauth/proposal\";\n    this.accesstokenserviceurl=\"/ariademo/accessToken.php\";\n  }\n\n  attached() {\n    console.log('ariaapi.attached()');\n  }\n\n  created() {\n    console.log('ariaapi.created()');\n  }\n\n  getProposallist() {\n    //if the projects is already fetched - returns it, otherwise fetch\n   return this.httpclient.fetch(this.proposallisturl)\n        .then(response => response.json())\n        .then(data => {\n          this.proposallist= data\n          return data\n        })\n        .catch(error => {\n          console.log(error);\n        });\n  }\n\n  getProposal() {\n      return this.httpclient.fetch(this.proposalurl)\n        .then(response => response.json())\n        .then(data => {\n          this.proposal=data;\n          return data;\n        })\n        .catch(error => {\n          console.log(error);\n        });\n  }\n\n  getAriaLink() {\n    return this.httpclient.fetch(this.accesstokenserviceurl)\n      .then(response => response.json())\n      .then(data => {\n        return data;\n      })\n      .catch(error => {\n        console.log(error);\n      });\n  }\n\n  getAccessToken(code,state){\n    console.log(\"Ariaapi.getAccessToken()\");\n    return this.httpclient.fetch(this.accesstokenserviceurl+\"?code=\"+code+\"&state=\"+state)\n      .then(response => response.json())\n      .then(data => {\n        console.log(\"ariaapi.getaccesstoken() returned:\");\n        console.log(data);\n        return data;\n      })\n      .catch(error => {\n        console.log(error);\n      });\n  }\n\n}\n","import {Interceptor, HttpResponseMessage, RequestMessage} from \"aurelia-fetch-client\";\n\nexport class Csrfheaderinterceptor { //implements Interceptor {\n  constructor() {\n    this.TOKEN_HEADER = 'X-CSRF-TOKEN';\n    this.latestCsrfToken;\n  }\n  response(response) {\n    console.log(\"csrfheaderinterceptor, headers:\")\n    console.log(response.headers)\n    if (response.headers.has(this.TOKEN_HEADER)) {\n      this.latestCsrfToken = response.headers.get(this.TOKEN_HEADER);\n    }\n    return response;\n  }\n\n  request(request) {\n    if (this.latestCsrfToken) {\n      console.log(request)\n      console.log(this.latestCsrfToken)\n      if (['POST', 'PUT', 'PATCH'].indexOf(request.method) >= 0) {\n        request.headers.add(this.TOKEN_HEADER, this.latestCsrfToken);\n      }\n    }\n    return request;\n  }\n\n}\n","import {ProjectApi} from '../components/projectapi';\nimport {EventAggregator} from 'aurelia-event-aggregator';\nimport {Selecteddataset,Preselecteddataset,Preselectedproject,Preselecteddatasets} from \"./messages\";\n\nexport class Datasettable {\n  static inject = [ProjectApi,EventAggregator];\n\n  constructor(pa,ea) {\n    this.pa=pa;\n    this.alldatasets = [];\n    //this.showDatasets =true;\n    this.ea=ea;\n    this.ea.subscribe(Preselecteddataset,msg =>this.filterSelectedDataset(msg.datasetid));\n    this.ea.subscribe(Preselecteddatasets,msg =>this.filterProjectDatasets(msg));\n  }\n\n  attached() {\n    console.log(\"datasettable attached()\");\n    this.pa.getDatasets().then(data => {\n      this.alldatasets = data;\n      this.selectedDatasetId=this.pa.getSelectedDataset();\n      if (this.selectedDatasetId>0) this.filterSelectedDataset(this.selectedDatasetId);\n    });\n  }\n/*\n  activate(params, routeConfig, navigationInstruction){\n    console.log(\"Visitingscientist activate()\")\n    if (params && params.datasetid) {\n      this.filterSelectedDataset(params.datasetid);\n    }\n  }\n  */\n\n  selectDataset(dataset){\n    this.selectedDataset=dataset;\n    this.ea.publish(new Selecteddataset(dataset))\n    return true;\n\n  }\n  deselectProject(){\n    this.selectedDataset=null;\n    this.ea.publish(new Selecteddataset(null))\n    return true;\n  }\n\n\n  filterProjectDatasets2(id) {\n    //this.selectedProposal=item;\n    //this.selectedDatasetId=id;\n    //this.filterMyProject();\n    //get the selected dataset\n    console.log(\"filterMyDataset()\");\n    console.log(this.alldatasets);\n    let mydataset= this.alldatasets.filter(i=> i.id == id);\n    console.log(mydataset);\n    if (mydataset.length>0){\n      //get project related to dataset\n      this.selectedProjectId=mydataset[0].projectId;\n      console.log(this.selectedProjectId);\n      //filter datasets of the project\n      this.datasets=this.alldatasets.filter(i => i.projectId == this.selectedProjectId);\n      console.log(\"datasets:\");\n      console.log(this.datasets);\n      //this.showProposals=false;\n      this.ea.publish(new Preselectedproject(this.selectedProjectId));//this.filterProject();\n      //this.selectDataset(mydataset[0]);\n      this.selectedDataset=mydataset[0];\n    }\n  }\n\n  filterProjectDatasets(msg){\n    this.filterProjectDatasets2(this.pa.getSelectedProject());\n  }\n}\n","/**\n * Created by Tomas Kulhanek on 2/17/17.\n */\n\nimport * as CodeMirror from \"codemirror\";\nimport \"codemirror/mode/clike/clike\";\nimport \"codemirror/mode/htmlmixed/htmlmixed\";\nimport \"codemirror/mode/javascript/javascript\";\n\nimport {EventAggregator} from 'aurelia-event-aggregator';\nimport {HttpClient} from 'aurelia-fetch-client';\nimport {Editfile} from './messages';\nimport {Nmrapi} from './nmrapi';\nimport {bindable} from 'aurelia-framework';\n\n\n//import $ from 'jquery';\n\n\nexport class Fileeditor {\n  static inject = [EventAggregator, HttpClient,Nmrapi];\n  @bindable pid;\n\n  constructor(ea,httpclient,nmrapi) {\n    this.ea = ea;\n    this.client = httpclient;\n    this.nmrapi = nmrapi;\n    this.ea.subscribe(Editfile, msg => this.selectFile(msg.file));\n    this.isimage=false;\n    this.filename=\"\";\n    this.showtable=false;\n  }\n\n  attached() {\n    console.log(\"Fileeditor.attached()1\");\n    this.codemirror = CodeMirror.fromTextArea(this.cmTextarea, {\n      lineNumbers: true,\n      mode: \"text/x-less\",\n      lineWrapping: true\n    });\n    this.codemirror.refresh();\n    //sample data ofr table\n    this.data=[[\"no data for preview\",1],[1,1]];\n\n    //handsontable needs to be inlcuded in <script ...> of index.html page\n    this.ht2 = new Handsontable (this.filetable, {\n      data: this.data,\n      rowHeaders: true,\n      colHeaders: [\"R\",\"I\"],\n      autoWrapRow:true,\n      stretchH: \"all\",\n      autoResizeColumn: true\n\n    });\n    console.log(this.ht2);\n  }\n\n  selectFile(file) {\n    let that =this\n\n      this.imageurl = file.webdavurl;\n      //visualizeimg is set & image extension is detected\n      //vfstorage returns string - should convert to boolean\n      this.isimage =\n        ((file.name.endsWith('.JPG'))||\n          (file.name.endsWith('.jpg'))||\n          (file.name.endsWith('.PNG'))||\n          (file.name.endsWith('.png'))||\n          (file.name.endsWith('.GIF'))||\n          (file.name.endsWith('.gif'))||\n          (file.name.endsWith('.BMP'))||\n          (file.name.endsWith('.bmp'))||\n          (file.name.endsWith('.SVG'))||\n          (file.name.endsWith('.svg')));\n\n      //console.log(\"fileeditor.selectfile() visualizeimg: isimage:\")\n      //console.log(this.isimage);\n\n      /*get first 4 kB of data, if it is supported by web server in Range header */\n      if (!this.isimage)\n\n        this.client.fetch(file.webdavurl, {credentials: 'same-origin',headers:{'Range': 'bytes=0-4095'}})\n          .then(response => {\n            //have duplicate of blob and text\n            let response2= response.clone();\n            response.blob().then(data2 => {\n              that.data={};\n              let bindata= that.nmrapi.convert(data2,that.data,that.ht2);\n            })\n              response2.text().then(data => {\n                that.codemirror.setValue(data);\n                that.codemirror.refresh();\n                that.filename = file.webdavurl;\n              });\n            }\n          ).catch(error => {\n          alert('Error retrieving content from ' + file.webdavurl);\n          console.log(error);\n        });\n\n\n  }\n  //triggered when click on button\n  table() {\n    this.showtable= ! this.showtable;\n    //workaround - table width is incorect when rendered hidden\n    //render it after 100 ms again, usually after it is shown, thus calculating\n    //correct width\n    if (this.showtable) window.setTimeout(function(that){that.ht2.render()},100,this);\n  }\n\n}\n","import {Handsontable} from \"handsontable\";\n\nexport class htable {\n  attached(){\n    this.data = [[1,2],[1,3]];\n    this.ht = new Handsontable(this.idtable, {\n      data: this.data,\n      rowHeaders: true,\n      colHeaders: true\n    });\n  }\n}\n","import {Ariaapi} from '../components/ariaapi';\n\n/* Dashboard receives list of projects and list of datasets, in case the project or dataset is selected either by click or within url it is filtered */\nexport class Importaria {\n  static inject = [Ariaapi];\n  constructor(ariaapi){\n    this.ariaapi = ariaapi;\n    this.ariaurl = \"\";\n    this.showspinner=true;\n  }\n\n  attached () {\n    this.ariaapi.getAriaLink().then(\n      linkdata => {\n        console.log('importaria.attached() recieved linkdata');\n        console.log(linkdata);\n        this.ariaurl = linkdata.url;\n        this.showspinner=false;\n      }\n    )\n    //this.ariaurl=this.aoaservice+\n\n  }\n}\n","/**\n * Created by Tomas Kulhanek on 1/9/17.\n */\n\nexport class Webdavresource {\n  constructor(webdavurl){\n    this.webdavurl = webdavurl;\n  }\n}\n\nexport class Editfile {\n  constructor(file){\n    this.file = file;\n  }\n}\n\nexport class Uploaddir {\n  constructor(webdavurl){\n    this.webdavurl = webdavurl;\n  }\n}\n\nexport class Selectedproject {\n  constructor(project){\n    this.project = project;\n  }\n}\n\nexport class Preselectedproject {\n  constructor(projectid){\n    this.projectid = projectid;\n  }\n}\n\nexport class Selecteddataset {\n  constructor(dataset){\n    this.dataset = dataset;\n  }\n}\nexport class Preselecteddataset {\n  constructor(datasetid){\n    this.datasetid = datasetid;\n  }\n}\n\nexport class Preselecteddatasets {\n  constructor(){\n  }\n}\n","// defines some usefull methods which can be used by other related to handle NMR data\n\nexport class Nmrapi {\n  // converts blob e.g. from Response into byte array and float array in data\n  // data is reference to data object= {raw:Float32Array,ri:[[1,2],[1,3],...]}\n  // optional handsontable is reference to handsontable object, if it exists, it is updated\n  // with data.ri\n  convert(blob,data,handsontable) {\n    //convert blob to array of floats\n    let arrayBuffer;\n    let fileReader = new FileReader();\n\n    // define action at the end of reading\n    fileReader.addEventListener(\"loadend\", function() {\n      //console.log(\"fileeditor.convert() raw data read:\")\n      // store the read data\n      let uint8Array = new Uint8Array(fileReader.result);\n\n      // if it starts with '#' that will be probably nuts or jcamp format - ASCII until ctrl-z (#26) fid\n      if (uint8Array[0]===35) {\n        console.log('Jcamp or Nuts format detected - shift to CTRL-z')\n        let indexbindata=uint8Array.indexOf(26);\n        let uint82 = new Uint8Array(uint8Array,indexbindata+1);\n        data.raw = new Float32Array(uint82.buffer);\n      } else {\n        data.raw = new Float32Array(uint8Array.buffer);\n      }\n\n      // now convert rawdata into array of [[Real,Imaginary],[Real,Imaginary],..]\n      // which handsontable can visualize\n      data.ri = [];\n      for (let i=0;(i+1)<data.raw.length;i+=2){\n        //console.log(data.raw[i]);\n        //console.log(data.raw[i+1])\n        data.ri.push([data.raw[i],data.raw[i+1]]);\n      }\n      //update handsontable if it is defined\n      if (handsontable) handsontable.updateSettings({data:data.ri});\n    });\n    fileReader.readAsArrayBuffer(blob);\n  }\n\n}\n","import {HttpClient,json} from 'aurelia-fetch-client';\n//import {Csrfheaderinterceptor} from '../components/csrfheaderinterceptor';\n/* Provides methods to return promise of data from REST Project api*/\nexport class ProjectApi {\n  static inject = [HttpClient];\n\n\n  constructor(httpclient,ea) {\n    this.httpclient=httpclient;\n\n    //needs SSO credentials\n    let apiurl = \"/restcon\";\n    //test fronted calls test backend uri - which has test authentication - test credentials added\n    if (window.location.pathname.indexOf('repositorytest2')>0) apiurl = \"/restcontest2\";\n    else if (window.location.pathname.indexOf('repositorytest')>0) apiurl = \"/restcontest\";\n    this.projecturl=apiurl+\"/project\";\n    this.dataurl=apiurl+\"/dataset\";\n    this.userinfourl=apiurl+\"/user\";\n    //needs admin/staff credentials\n    this.usersurl=\"/admin/restcon/users\";\n    this.projects=[];\n    this.datasets=[];\n    console.log(\"projectapi\");\n    this.httpclient.configure(config => {\n      config\n        .rejectErrorResponses()\n        .withBaseUrl('')\n        .withDefaults({\n          credentials: 'same-origin',\n          headers: {\n            'Accept': 'application/json',\n            'X-Requested-With': 'Fetch'\n          }\n        })\n    });\n    this.selectedProjectId=0;\n    this.selectedDatasetId=0;\n  }\n\n  getProjects() {\n    //if the projects is already fetched - returns it, otherwise fetch\n    if (this.projects.length>0)\n      return new Promise(resolve => resolve(this.projects))\n    else\n      return this.httpclient.fetch(this.projecturl)\n      .then(response => response.json())\n      .then(data => {\n        this.projects= data;\n        return data\n      })\n      .catch(error => {\n        console.log(error);\n\n      });\n  }\n\n  setSelectedProject(id){\n    this.selectedProjectId=id;\n  }\n  getSelectedProject(){\n    return this.selectedProjectId;\n  }\n\n  getDatasets() {\n    if (this.datasets.length>0)\n      return new Promise(resolve => resolve(this.datasets))\n    else\n    return this.httpclient.fetch(this.dataurl)\n      .then(response => response.json())\n      .then(data => {\n        this.datasets=data;\n        return data;\n      })\n      .catch(error => {\n        console.log(error);\n      });\n\n  }\n  setSelectedDataset(id){\n    this.selectedDatasetId=id;\n  }\n  getSelectedDataset(){\n    return this.selectedDatasetId;\n  }\n  submitDataset(dataset) {\n      return this.httpclient.fetch(this.dataurl, { method:'post', body:json(dataset)})\n        .then(response => response.json())\n        .then(data => {\n          this.datasets=data;\n          return data;\n        });\n  }\n\n  /* getting list of users - available for staff */\n  getUsers() {\n    return this.httpclient.fetch(this.usersurl)\n      .then(response => response.json())\n      .then(data => {\n        return data;\n      })\n      .catch(error => {\n        console.log('getUsers() returns error:');\n        console.log(error);\n        //alert(\"Sorry, error:\"+error.statusCode+\" \"+error.message);\n      });\n  }\n\n  getUserInfo() {\n      return this.httpclient.fetch(this.userinfourl)\n        .then(response => response.json())\n        .then(data => {\n          return data;\n        })\n        .catch(error => {\n          console.log('getUserInfo() returns error:');\n          //console.log(error);\n          throw error;\n          //          alert(\"Sorry, error:\"+error.statusCode+\" \"+error.message);\n        });\n    }\n}\n","import {Webdavresource} from \"../components/messages\";\nimport {ProjectApi} from './projectapi';\nimport {EventAggregator} from 'aurelia-event-aggregator';\nimport {Selectedproject,Preselectedproject,Preselecteddatasets} from \"./messages\";\n\nexport class Projecttable {\n  static inject = [ProjectApi,EventAggregator];\n\n  constructor(pa,ea) {\n    console.log(\"Projecttable()\");\n    this.pa = pa;\n    this.ea=ea;\n    this.projects = [];\n    this.selectedProject=null;\n    this.selectedProjectId=0;\n    console.log(\"Projecttable() subscribe\");\n    this.ea.subscribe(Preselectedproject,msg =>this.filterSelectedProposal(msg.projectid));\n  }\n\n  attached() {\n    console.log(\"projecttableattached()\")\n    this.pa.getProjects().then(data => {\n      this.projects = data;\n      //data retrieved and selectedProject already set e.g. by activate, call filter again\n      this.selectedProjectId=this.pa.getSelectedProject();\n      if (this.selectedProjectId>0) this.filterSelectedProposal(this.selectedProjectId);\n    });\n  }\n\n  /* it is triggered in first click on project - url is generated\n* or when url is submitted directly to browser\n  activate(params, routeConfig, navigationInstruction) {\n    console.log(\"Visitingscientist activate()\")\n    if (params && params.projectid) {\n      this.filterSelectedProposal(params.projectid);\n    }\n  }\n*/\n  /* this is used when new project proposal is selected - it filters project by id and datasets by id*/\n  filterSelectedProposal(id) {\n    //this.selectedProposal=item;\n    this.selectedProjectId=id;\n    console.log(\"projecttable.filterProject()\");\n    console.log(this.projects);\n    console.log(id);\n    if (this.projects.length>0) {\n      this.selectedProject = this.projects.filter(i => i.id == id)[0];\n      this.pa.setSelectedProject(id);\n      this.ea.publish(new Preselecteddatasets(id));\n    } else {\n      console.log(\"projects are not yet retrieved\");\n    }\n  }\n\n  selectProject(project){\n    console.log(\"selectProject()\");\n    this.selectedProject=project;\n    this.ea.publish(new Selectedproject(project))\n    return true;\n  }\n\n  deselectProject(){\n    console.log(\"deselectProject()\");\n    this.selectedProject=null;\n    this.ea.publish(new Selectedproject(null))\n    return true;\n  }\n\n\n}\n","import {EventAggregator} from 'aurelia-event-aggregator';\nimport {ProjectApi} from './projectapi';\nimport {Selectedproject} from \"../components/messages\";\n\nexport class Projecttableselect {\n  static inject = [ProjectApi,EventAggregator];\n\n  constructor(pa,ea) {\n    this.pa = pa;\n    this.ea=ea;\n    this.projects = [];\n    this.selectedProject=null;\n  }\n\n  attached() {\n    console.log(\"projecttableattached()\")\n    this.pa.getProjects().then(data => {\n      this.projects = data;\n    });\n  }\n\n  selectProject(project){\n    this.selectedProject=project;\n    this.ea.publish(new Selectedproject(project))\n\n  }\n  deselectProject(){\n    this.selectedProject=null;\n    this.ea.publish(new Selectedproject(null))\n  }\n\n\n}\n","export class Searchbydate {\n\n}\n","import {ProjectApi} from './projectapi';\n\nexport class Userinfo {\n  static inject = [ProjectApi];\n\n  constructor(projectapi) {\n    this.pa = projectapi;\n    this.showuserinfo=false;\n  }\n\n  attached(){\n    this.pa.getUserInfo().then(data => {\n        console.log(data);\n        this.userinfo=data;\n        this.showuserinfo=true;\n      })\n      .catch(error => {\n        console.log(\"no user info, disable showing it\")\n        this.showuserinfo=false;\n      })\n  }\n}\n","import {HttpClient} from 'aurelia-fetch-client';\nimport {EventAggregator} from 'aurelia-event-aggregator';\nimport {Editfile,Webdavresource} from './messages';\n\nexport class Webdavfilepanel {\n  static inject = [EventAggregator,HttpClient];\n\n  constructor(ea,httpclient) {\n    //even aggregator to listen for webdav resource to be presented/updated in panel\n    this.ea =ea;\n    this.ea.subscribe(Webdavresource,msg =>this.setwebdav(msg.webdavurl))\n    //http client to perform WEBDAV queries\n    this.httpclient = httpclient;\n    this.httpclient.configure(config => {\n      config\n        .rejectErrorResponses()\n        .withBaseUrl('')\n        .withDefaults({\n          credentials: 'same-origin',\n          headers: {\n            'Accept': 'application/json',\n            'X-Requested-With': 'Fetch'\n          }\n        })\n    });\n    this.webdavpath = '/files/XufWqKau/';\n    //hold depth of directory structure if cd into them\n    this.dirs=[];\n  }\n\n  setwebdav(webdavurl) {\n    this.webdavpath = webdavurl;\n    //query the directory content\n    this.httpclient.fetch(this.webdavpath, {\n      method: 'PROPFIND',\n      headers: {'Depth': '1'}\n    }).then(response => response.text())\n      .then(str => (new window.DOMParser()).parseFromString(str, \"text/xml\"))\n      .then(data => {\n        //parse structure https://stackoverflow.com/questions/17604071/parse-xml-using-javascript\n        this.files = [];\n        let filesDOM = data.getElementsByTagName(\"D:response\");\n        for (let fileitem of filesDOM) {\n          let filename = this.getFirstElementByTagName(fileitem, \"D:href\");\n          let filedate = this.getFirstElementByTagName(fileitem, \"lp1:creationdate\");\n          let filesize = this.getFirstElementByTagName(fileitem, \"lp1:getcontentlength\");\n          let filetype = this.getFirstElementByTagName(fileitem, \"D:getcontenttype\");\n          //console.log(this.webdavpath+\" x \"+filename);\n          if (filename != this.webdavpath) //do not include current dir\n          {\n            let item = {};\n            item.name = filename.replace(this.webdavpath, '')\n            item.date = filedate;\n            item.nicedate = this.formatdate(new Date(filedate));\n            item.isdir= filetype == 'httpd/unix-directory';\n            item.size = filetype == 'httpd/unix-directory' ? 'DIR' : filesize;\n            //convert to 4GB or 30MB or 20kB or 100b\n            item.nicesize = item.isdir ? item.size: ~~(item.size / 1000000000) > 0 ? ~~(item.size / 1000000000) + \"GB\" : (~~(item.size / 1000000) > 0 ? ~~(item.size / 1000000) + \"MB\" : (~~(item.size / 1000) > 0 ? ~~(item.size / 1000) + \"kB\" : item.size + \" b\"));\n            item.type = filetype;\n            item.webdavurl=this.webdavpath+item.name;\n            //directory first, files after that\n            if (item.isdir) this.files.unshift(item);\n            else this.files.push(item);\n          }\n\n        }\n        //adds first row with '..' to cd to parent directory\n        if (this.dirs.length>0) this.files.unshift({name:'..',isdir:true,size:'DIR',date:''});\n      }).catch(error => {\n      console.log(\"selectDataset() error\");\n      console.log(error);\n    });\n  }\n\n  getFirstElementByTagName(fileitem,tag) {\n    //console.log(tag);\n    let elements =fileitem.getElementsByTagName(tag);\n    //console.log(elements);\n    return elements.length>0?elements[0].textContent:'';\n  }\n\n  selectFile(file){\n    //file.webdavurl = this.webdavpath+file.name;\n    if (file.isdir) {\n      let newdir= '';\n      if (file.name =='..') {\n        newdir = this.dirs.pop();\n      } else {\n        this.dirs.push(this.webdavpath);\n        newdir = this.webdavpath+file.name;\n      }\n      this.setwebdav(newdir);\n    }\n    else  this.ea.publish(new Editfile(file));\n  }\n\n  formatdate(date) {\n      let diff = new Date() - date; // the difference in milliseconds\n\n      if (diff < 1000) { // less than 1 second\n        return 'right now';\n      }\n\n      let sec = Math.floor(diff / 1000); // convert diff to seconds\n\n      if (sec < 60) {\n        return sec + ' sec. ago';\n      }\n\n      let min = Math.floor(diff / 60000); // convert diff to minutes\n      if (min < 60) {\n        return min + ' min. ago';\n      }\n\n      // format the date\n      // add leading zeroes to single-digit day/month/hours/minutes\n      let d = date;\n      d = [\n        '0' + d.getDate(),\n        '0' + (d.getMonth() + 1),\n        '' + d.getFullYear(),\n        '0' + d.getHours(),\n        '0' + d.getMinutes()\n      ].map(component => component.slice(-2)); // take last 2 digits of every component\n\n      // join the components into date\n      return d.slice(0, 3).join('.') + ' ' + d.slice(3).join(':');\n    }\n}\n","import {bindable} from 'aurelia-framework';\nimport {EventAggregator} from 'aurelia-event-aggregator';\nimport {Uploaddir} from '../components/messages';\n\nexport class Pickerclient {\n  static inject = [EventAggregator];\n  @bindable mode;\n\n  constructor(ea) {\n    this.ea=ea;\n    this.href=\"https://portal.west-life.eu/virtualfolder/filepickercomponent.html\";\n    this.href2=\"https://portal.west-life.eu/virtualfolder/uploaddirpickercomponent.html\";\n    this.vfurl=\"\";\n    //receives message from popup window, fills target element with the data received\n    let th2= this\n    this.receiveMessage = e => {\n      console.log(\"received event\");\n      console.log(e);\n      th2.vfurl=e.data;\n      console.log(\"publishing event\");\n      th2.ea.publish(new Uploaddir(th2.vfurl))\n    }\n    console.log(\"Pickerclient()\");\n    console.log(this.mode)\n  }\n\n  attached() {\n    //registers itself to receive message from popup window\n    window.addEventListener(\"message\", this.receiveMessage);\n    console.log(\"Pickerclient attached()\");\n    console.log(this.mode);\n    this.filepicker = (this.mode === \"file\")\n  }\n\n  detached() {\n    window.removeEventListener(\"message\", this.receiveMessage)\n  }\n\n//opens popup window in defined location, sets the target element id.\n  openfilewindow() {\n    this.popup=window.open(this.href, 'newwindow', 'width=640, height=480');\n  }\n  opendirwindow() {\n    this.popup=window.open(this.href2, 'newwindow', 'width=640, height=480');\n  }\n}\n","import {bindable} from 'aurelia-framework';\n/** Icopy - <icopy href=\"link-reference\"></icopy>\n * element to create a link icon which on click will copy the url into the clipboard\n * using the browser capability document.execCommand(\"copy\")\n */\n\nexport class Icopy {\n  @bindable href;\n\n  attached() {\n    //set value of referenced input\n    // href is relative - thus adding protocol and hostname, port\n    let port = (window.location.port == \"\" || window.location.port==\"80\" || window.location.port == \"443\")? \"\" :\":\"+window.location.port;\n    this.hrefid.value = window.location.protocol+ '//'+window.location.hostname+port+this.href;\n  }\n\n  copyclipboard() {\n    let inputElement = this.hrefid;\n    inputElement.select();\n    document.execCommand(\"copy\");\n    console.log(inputElement.value);\n    alert(\"Copied the url to clipboard: \" + inputElement.value);\n  }\n}\n","export function configure(config) {\n  //config.globalResources([]);\n  config.globalResources([\n    './irep.html',\n    './irepdemo.html',\n    './iadmin.html',\n    './istaff.html',\n    './ifile.html',\n    './ilink.html',\n    './icopy',\n    './ifolder.html',\n    './idata.html',\n    './iproject.html',\n    './itable.html',\n    './ispincog.html',\n    './iupload',\n    './idelete.html'\n  ]);\n\n}\n","import {bindable} from 'aurelia-framework';\n/** Iupload - <iupload href=\"link-reference\"></iupload>\n * element to create a link icon which on click will copy the url into the clipboard\n */\n/*\nvar popup;\nvar target;\n//opens popup window in defined location, sets the target element id.\nfunction openwindow(_target,href) {\n  target = _target;\n  popup=window.open(href, 'newwindow', 'width=640, height=480');\n}\n//receives message from popup window, fills target element with the data received\nfunction receiveMessage(event) {\n  document.getElementById(target).innerHTML=event.data;\n  document.getElementById(target).setAttribute(\"href\",event.data);\n}\nwindow.addEventListener(\"message\", receiveMessage, false);\n*/\nexport class Iupload {\n  @bindable href;\n\n  constructor() {\n    //receiveMessage will be registered in event listener - this declaration will assure that the context 'this' won't be lost\n    this.receiveMessage = event=> {\n      this.uploadhref=event.data;\n      if (this.uploadhref && this.uploadhref.length>0){\n        //now upload from this.hreffull to this.uploadhref\n        console.log(\"Iupload.receiveMessage()\");\n        console.log(\"will upload from:\"+this.hreffull);\n        console.log(\"              to:\"+this.uploadhref);\n      }\n    }\n\n  }\n\n  attached() {\n    //set value of referenced input\n    // href is relative - thus adding protocol and hostname, port\n    let port = (window.location.port == \"\" || window.location.port==\"80\" || window.location.port == \"443\")? \"\" :\":\"+window.location.port;\n    this.hreffull = window.location.protocol+ '//'+window.location.hostname+port+this.href;\n    console.log(\"Iupload.atached()\")\n    console.log(this.href)\n    console.log(this.hreffull)\n    window.addEventListener(\"message\", this.receiveMessage, false);\n  }\n\n  dettached() {\n    window.removeEventListener(\"message\", this.receiveMessage);\n  }\n\n  openwindow(href) {\n    this.popup=window.open(href, 'newwindow', 'width=640, height=480');\n  }\n\n  uploadtovf() {\n    this.openwindow('https://portal.west-life.eu/virtualfolder/uploaddirpickercomponent.html');\n  }\n}\n","import {Selectedproject} from \"../components/messages\";\nimport {EventAggregator} from 'aurelia-event-aggregator';\nimport {ProjectApi} from '../components/projectapi';\n\n/* Dashboarddetails shows details of projects/datasets */\nexport class Createdataset {\n  static inject = [EventAggregator, ProjectApi];\n\n  constructor(ea, pa) {\n    this.ea = ea;\n    this.pa = pa;\n    this.datasetname=\"Antidote\";\n    this.datasetinfo=\"0 b\";\n    this.datasetsummary=\"spectrum of antidote\";\n    this.datasetprojectid=null;\n    this. submitted=false;\n    this.ea.subscribe(Selectedproject,msg =>this.selectProject(msg.project));\n  }\n\n  submit(){\n    console.log(\"submitting dataset:\"+this.datasetname);\n    this.pa.submitDataset({name:this.datasetname,info:this.datasetinfo,summary:this.datasetsummary,projectId:this.datasetprojectid})\n      .then(dataset =>{\n        this.submitted=true;\n        this.submitteditem=dataset;\n      })\n      .catch(error => {\n        console.log(error);\n        alert(\"Error when submitting new dataset:\"+error);\n      });\n    this.datasetname=\"\";\n    this.datasetinfo=\"\";\n    this.datasetsummary=\"\";\n  }\n\n  generate(){\n    this.datasetname=\"Antidote\";\n    this.datasetinfo=Math.floor((Math.random() * 100) + 1)+\" b\";\n    this.datasetsummary=\"spectrum of antidote\"\n  }\n\n  selectProject(project){\n    if (project) {\n      this.datasetprojectid = project.id;\n    } else this.datasetprojectid=null;\n\n  }\n}\n","import {Ariaapi} from '../components/ariaapi';\n\n\nconst getParams = query => {\n  if (!query) {\n    return {};\n  }\n\n  return (/^[?#]/.test(query) ? query.slice(1) : query)\n    .split('&')\n    .reduce((params, param) => {\n      let [key, value] = param.split('=');\n      params[key] = value ? decodeURIComponent(value.replace(/\\+/g, ' ')) : '';\n      return params;\n    }, {});\n};\n\n\n/* Dashboard receives list of projects and list of datasets, in case the project or dataset is selected either by click or within url it is filtered */\nexport class Dashboard {\n  /* Dashboarddetails shows details of projects/datasets */\n  static inject = [Ariaapi];\n  constructor(ariaapi) {\n    this.ariaapi = ariaapi;\n    this.importingaria=false;\n    this.importariastatus=\"\";\n    this.importariaerror=false;\n  }\n/*\n  activate(){\n    console.log(\"dashboard.activated()\");\n  }\n*/\n  attached(){\n    console.log(\"dashboard.attached()\");\n    this.params=getParams(window.location.search.substring(1));\n    console.log(this.params);\n    this.code=this.params.code;\n    this.state=this.params.state;\n    if (this.code && this.state) {\n      this.importingaria=true;\n      //code and state are in url => button (import ARIA proposals) was clicked before and redirected back from ARIA - thus\n      //importing the data now\n      this.ariaapi.getAccessToken(this.code,this.state).then(accessToken =>{\n        console.log(\"Dashboard.attached() accestoken:\");\n        console.log(accessToken);\n        this.importingaria=false;\n        if (accessToken.error_description) {\n          this.importariastatus=accessToken.error_description\n          this.importariaerror=true;\n        }\n      });\n    }\n  }\n}\n\n","import {Selectedproject, Selecteddataset, Webdavresource, Preselectedproject,Preselecteddataset} from \"../components/messages\";\nimport {EventAggregator} from 'aurelia-event-aggregator';\nimport {ProjectApi} from '../components/projectapi';\n\n/* Dashboarddetails shows details of projects/datasets */\nexport class Dashboarddetail {\n  static inject = [EventAggregator,ProjectApi];\n\n  constructor(ea,pa) {\n    this.ea = ea;\n    this.pa=pa;\n\n//    this.projects = [];\n/*\n    this.files=[];\n    this.datasets = [];\n    this.alldatasets = [];\n    this.showProposals=true;\n    this.showDatasets=true;\n    this.dataseturl=\"\";\n    this.selectedProjectId=0;\n    this.selectedDatasetId=0;\n    this.selectedProject={};\n    this.emptyDatasets=true;\n    */\n    this.ea.subscribe(Selectedproject,msg =>this.selectProject(msg.project));\n    this.ea.subscribe(Selecteddataset,msg => this.selectDataset(msg.dataset));\n  }\n\n  /* it is triggered in first click on project - url is generated\n  * or when url is submitted directly to browser */\n  activate(params, routeConfig, navigationInstruction){\n    console.log(\"dashboarddetail.activate()\")\n    if (params && params.projectid) {\n      console.log(\"dashboarddetail projectid:\"+params.projectid);\n      this.filterProject(params.projectid);\n    }\n    if (params && params.datasetid) {\n      console.log(\"dashboarddetail datasetid:\"+params.datasetid);\n      this.filterDataset(params.datasetid);\n    }\n  }\n\n  /* triggered when the view is shown to user - it requests projects and dataset\n  * available for user from REST api*/\n  attached() {\n    console.log(\"Dashboard.attached()\")\n    //console.log(this.pa);\n  }\n\n  //triggered when a project is clicked -\n  // if the same project is selected activate() is not launched - enough to hide all other projects\n  selectProject(project) {\n    this.showProposals=false;\n    this.showDatasets=true;\n    this.filterSelectedProposal(project.id);\n    return true;\n  }\n\n  /* this is used when new project proposal is selected - it filters project by id and datasets by id*/\n  filterSelectedProposal(id) {\n    //this.selectedProposal=item;\n    this.selectedProjectId=id;\n    this.filterProject();\n    this.filterDataset();\n  }\n\n  filterSelectedDataset(id) {\n    //this.selectedProposal=item;\n    this.selectedDatasetId=id;\n    //this.filterMyProject();\n    this.filterMyDataset();\n  }\n  \n  //expects that selectedDatasetId contains dataset which should be viewed, based on it it selects projectid\n  //filters project which is owning the dataset and publish webdavresource event with dataset webdavurl\n  filterMyDataset(){\n    //get the selected dataset\n    console.log(\"filterMyDataset()\");\n    console.log(this.alldatasets);\n    let mydataset= this.alldatasets.filter(i=> i.id == this.selectedDatasetId);\n    console.log(mydataset);\n    if (mydataset.length>0){\n      //get project related to dataset\n      this.selectedProjectId=mydataset[0].projectId;\n      console.log(this.selectedProjectId);\n      //filter datasets of the project\n      this.datasets=this.alldatasets.filter(i => i.projectId == this.selectedProjectId);\n      console.log(\"datasets:\");\n      console.log(this.datasets);\n      this.showProposals=false;\n      this.filterProject();\n      this.selectDataset(mydataset[0]);\n    }\n  }\n\n  /* helper class called from filterSelecterProposal - or when attached() so activate() call before didn't have\n  * the projects and datasets sets from REST api*/\n  filterProject(projectid){\n    console.log(\"dashboarddetail.filterProject()\");\n    this.pa.setSelectedProject(projectid);\n    this.ea.publish(new Preselectedproject(projectid))\n    /*\n    console.log(this.projects);\n    console.log(this.selectedProjectId);\n    if (this.projects.length>0) {\n      this.selectedProject = this.projects.filter(i => i.id == this.selectedProjectId)[0];\n      //this.filterDataset();\n      this.showProposals = false;\n    }*/\n  }\n\n  //filters dataset based on selectedProjectId\n  filterDataset(datasetid){\n    console.log(\"dashboarddetail.filterDataset()\");\n    this.pa.setSelectedDataset(datasetid);\n    this.ea.publish(new Preselecteddataset(datasetid));\n  }\n\n  //deselect project proposal, shows all proposals and datasets\n  deselectProposal() {\n    //this.selectedProposal=item;\n    this.datasets = this.alldatasets;\n    this.showProposals = true;\n    this.showDatasets = true;\n    //return true; //continues to process <a href>\n  }\n\n  //shows only one dataset and publish webdavresource with dataset's url\n  selectDataset(item) {\n    if (!item) {deselectDataset(); return true;}\n    console.log(\"selectDataset\");\n    console.log(item);\n    this.showDatasets=false;\n    this.selectedDataset=item;\n\n    //TODO replace URL by the one obtained from API\n    this.dataseturl=item.webdavurl;\n    this.ea.publish(new Webdavresource(item.webdavurl))\n    return true; //continues to process <a href>\n  }\n\n  deselectDataset() {\n    console.log(\"deselectDataset()\");\n    console.log(this.datasets);\n    console.log(this.alldatasets);\n    this.showDatasets=true;\n  }\n\n  selectFile(file){\n    console.log(\"SelectFile()\");\n    console.log(file);\n  }\n\n  deleteDataset() {\n    this.pa.deleteDataset(this.selectedDataset)\n    then(data => {\n      this.deselectDataset();\n      let i=this.datasets.map(function(e) {return e.id;}).indexOf(data.id);\n      this.datasets.splice(i,1);\n      i=this.alldatasets.map(function(e) {return e.id;}).indexOf(data.id);\n      this.alldatasets.splice(i,1);\n    })\n  }\n}\n","\nimport {EventAggregator} from 'aurelia-event-aggregator';\nimport {Uploaddir} from '../components/messages';\n\nexport class Repositorytovf {\n  static inject = [EventAggregator]\n  constructor(ea) {\n    this.ea = ea;\n    console.log(\"Repositorytovf()\");\n\n\n    this.datasets=[{name:\"sucrose.t1\",size:133511,date:\"18/06/2001\"},\n      {name:\"hetcor.2d\",size:525832,date:\"18/06/2001\"},\n      {name:\"menth.c13\",size:132108,date:\"18/06/2001\"},\n      {name:\"noesy.fid\",size:1640436,date:\"18/06/2001\"},\n      {name:\"hsqc.fid\",size:2098448,date:\"18/06/2001\"},\n      {name:\"hmbc.fid\",size:2098448,date:\"18/06/2001\"}];\n    this.filestoupload=[];\n    this.uploadfiles=[];\n    this.uploaddir=\"\";\n    this.selectingfiles=true;\n    this.ea.subscribe(Uploaddir,msg =>this.setuploaddir(msg.webdavurl))\n    this.copyinprogress=false;\n  }\n\n  attached() {\n\n  }\n\n  setuploaddir(url) {\n    console.log(\"setuploaddir()\");\n    console.log(url)\n    this.uploaddir=url;\n    this.selectedUploadDir = true;\n  }\n\n  selectitem(item) {\n    console.log(\"Selected\",item)\n  }\n\n  submitfiles() {\n    this.selectingfiles=false;\n  }\n\n  unsubmitfiles(){\n    this.selectingfiles=true;\n  }\n  deleteitem(item){\n    let indexremoved = this.datasets.indexOf(item);\n    if (indexremoved >=0 ) this.datasets.splice(indexremoved,1);\n  }\n\n  selectItemToUpload(item) {\n    console.log(\"selected item\");\n    console.log(item);\n  }\n\n  removeItemToUpload(item){\n    console.log(\"selected item\");\n    console.log(item);\n    let i = this.filestoupload.indexOf(item);\n    this.filestoupload.splice(i,1);\n  }\n\n  dropped(event){\n    console.log(\"Dropped\")\n    console.log(event.dataTransfer.files);\n    event.stopPropagation();\n    event.preventDefault();\n    this.filestoupload.unshift(...event.dataTransfer.files);\n    return true;\n  }\n\n  dragged(event){\n    return true;//event.preventDefault(); event.dataTransfer.dropEffect = 'copy';\n  }\n\n  appendFiles(event){\n    console.log(\"appendFiles()\");\n    console.log(event.target.files);\n    //this.uploadfiles=event.target.files;\n    this.filestoupload.unshift(...event.target.files);\n    //else this.filestoupload.unshift(event.target.files);\n  }\n\n  appendDir(event) {\n    console.log(\"appendDir\")\n    console.log(event.target.files);\n    this.filestoupload.unshift(...event.target.files)\n  }\n\n  submitUpload(){\n    //TODO fake implementation\n    this.datasets.unshift(...this.filestoupload);\n    this.filestoupload=[];\n  }\n  copy(){\n    this.copyinprogress=true;\n  }\n\n}\n","import {ProjectApi} from '../components/projectapi';\n\nexport class Dataupload {\n  static inject = [ProjectApi];\n  constructor(pa) {\n    this.pa = pa;\n  }\n\n}\n","import {ProjectApi} from '../components/projectapi';\n\nexport class Repositorystaff {\n  static inject = [ProjectApi];\n  constructor(pa) {\n    console.log(\"Repositorystaff()\");\n    this.visitors = [];//\"Tomas Kulhanek\",\"Andrea Giacchieti\",\"Antonio Rosatto\"];\n    this.datasets=[];\n    this.filestoupload=[];\n    this.uploadfiles=[];\n    this.uploaddir=\"\";\n    this.selectinguser=true;\n    this.selectedvisitor=\"\";\n    this.pa = pa;\n  }\n\n  attached() {\n    this.pa.getUsers()\n      .then(data => { this.visitors = data });\n  }\n\n  selectitem(item) {\n    console.log(\"Selected\",item)\n  }\n\n  selectvisitor(visitor) {\n    this.selectinguser=false;\n    this.selectedvisitor = visitor;\n  }\n  deselectvisitor(){\n    this.selectinguser=true;\n  }\n  deleteitem(item){\n    let indexremoved = this.datasets.indexOf(item);\n    if (indexremoved >=0 ) this.datasets.splice(indexremoved,1);\n  }\n  \n    selectItemToUpload(item) {\n    console.log(\"selected item\");\n    console.log(item);\n  }\n\n  removeItemToUpload(item){\n    console.log(\"selected item\");\n    console.log(item);\n  let i = this.filestoupload.indexOf(item);\n    this.filestoupload.splice(i,1);\n  }\n\n  dropped(event){\n    console.log(\"Dropped\");\n    console.log(event.dataTransfer.files);\n    event.stopPropagation();\n    event.preventDefault();\n    this.filestoupload.unshift(...event.dataTransfer.files);\n    return true;\n  }\n\n  dragged(event){\n    return true;//event.preventDefault(); event.dataTransfer.dropEffect = 'copy';\n  }\n\n  appendFiles(event){\n    console.log(\"appendFiles()\");\n    console.log(event.target.files);\n    //this.uploadfiles=event.target.files;\n    this.filestoupload.unshift(...event.target.files);\n    //else this.filestoupload.unshift(event.target.files);\n  }\n\n  appendDir(event) {\n    console.log(\"appendDir\");\n    console.log(event.target.files);\n    this.filestoupload.unshift(...event.target.files)\n  }\n\n  submitUpload(){\n    //TODO fake implementation\n    this.datasets.unshift(...this.filestoupload);\n    this.filestoupload=[];\n  }\n\n}\n"],"sourceRoot":"../src"}